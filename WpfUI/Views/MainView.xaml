<UserControl x:Class="RcktMon.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cal="http://caliburnmicro.com"
             xmlns:componentmodel="clr-namespace:System.ComponentModel;assembly=WindowsBase" xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:views="clr-namespace:RcktMon.Views"
             xmlns:viewModels="clr-namespace:RcktMon.ViewModels"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance Type=viewModels:MainViewModel}"
             d:DesignHeight="1000" d:DesignWidth="1600">
    <UserControl.Resources>
        <CollectionViewSource IsLiveSortingRequested="True" Source="{Binding Stocks.Values}" x:Key="StocksCollectionView">
            <CollectionViewSource.SortDescriptions>
                <componentmodel:SortDescription PropertyName="DayChange" Direction="Descending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
          <CollectionViewSource Source="{Binding Messages}" x:Key="EventsCollectionView">
            <CollectionViewSource.SortDescriptions>
                <componentmodel:SortDescription PropertyName="Date" Direction="Descending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </UserControl.Resources>
    <Grid x:Name="LayoutGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <DockingManager Grid.Row="1">
            <DockingManager.Theme>
                <Vs2013DarkTheme />
            </DockingManager.Theme>
            
            <LayoutRoot>
                <LayoutPanel>
                    <LayoutPanel Orientation="Vertical">
                        <LayoutDocumentPane>
                            <LayoutDocument ContentId="Stocks" Title="Котировки" x:Name="StocksDoc">
                                  
                                <DataGrid IsReadOnly="True" ItemsSource="{Binding Source={StaticResource StocksCollectionView}}" 
                                        VirtualizingPanel.IsVirtualizing="True" 
                                        VirtualizingPanel.IsContainerVirtualizable="True"
                                        VirtualizingPanel.VirtualizationMode="Recycling"
                                        SelectedItem="{Binding SelectedStock}"
                                        ScrollViewer.CanContentScroll="True" PreviewMouseDoubleClick="StocksDataGrid_OnPreviewMouseDoubleClick"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                        AutoGenerateColumns="False" >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Width="220" Binding="{Binding Name}" Header="Название" />
                                        <DataGridTextColumn Binding="{Binding Ticker}" Header="Тикер" />
                                        <DataGridTextColumn Binding="{Binding Currency}" Header="Валюта" />
                                        <DataGridTextColumn Binding="{Binding TodayOpen}" Header="Цена открытия" />
                                        <DataGridTextColumn Binding="{Binding Price}" Header="Текущая цена" />
                                        <DataGridTextColumn Binding="{Binding DayChange, StringFormat=P2}" Header="Изменение" SortDirection="Descending" />
                                        <DataGridTextColumn Binding="{Binding DayVolume}" Header="Volume" />
                                        <DataGridTextColumn Binding="{Binding DayVolChgOfAvg, StringFormat=P2}" Header="% Avg Vol" />
                                        <DataGridTextColumn Binding="{Binding BestBidSpb}" Header="Лучший бид" />
                                        <DataGridTextColumn Binding="{Binding BestAskSpb}" Header="Лучший аск" />
                                        <DataGridTextColumn Binding="{Binding Exchange}" Header="Биржа" />
                                        <DataGridTextColumn Binding="{Binding Status}" Header="Состояние" />
                                        <DataGridTextColumn Binding="{Binding PriceUSA}" Header="Цена USA" x:Name="PriceUSAColumn" />
                                        <DataGridTextColumn Binding="{Binding DiffPercentUSA, StringFormat=P2}" Header="Diff USA" x:Name="DiffUSAColumn" />
                                        <DataGridTextColumn Binding="{Binding BidUSA}" Header="BB USA" x:Name="BidUSAColumn" />
                                        <DataGridTextColumn Binding="{Binding USBidRUAskDiff, StringFormat=P2}" Header="Bid Diff" x:Name="BidDiffUSAColumn"  />
                                        <DataGridTextColumn Binding="{Binding AskUSA}" Header="BA USA" x:Name="BidAskUSAColumn" />
                                        <DataGridTextColumn Binding="{Binding RUBidUSAskDiff, StringFormat=P2}" Header="Ask Diff" x:Name="AskDiffUSAColumn" />
                                        <DataGridTextColumn Binding="{Binding LastUpdate, StringFormat=HH:mm:ss.ff}" Header="Обновление" />
                                    </DataGrid.Columns>
                                </DataGrid>          
                                  
                            </LayoutDocument>        

                        </LayoutDocumentPane>

                        <LayoutAnchorablePane DockHeight="200">

                            <LayoutAnchorable ContentId="Alerts" Title="Лог событий" x:Name="EventDoc">

                                <DataGrid IsReadOnly="True"
                                          ItemsSource="{Binding Source={StaticResource EventsCollectionView}}" AutoGenerateColumns="False">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding Ticker}" Header="Тикер" />
                                        <DataGridTextColumn Binding="{Binding Change, StringFormat=P2}" Header="Изменение" />
                                        <DataGridTextColumn Binding="{Binding Volume}" Header="Объём" />
                                        <DataGridTextColumn Binding="{Binding Text}" Header="Сообщение" />
                                        <DataGridTextColumn Binding="{Binding Date}" Header="Дата события" />
                                        <DataGridTemplateColumn Header="Действия">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Name="ActionsText">
                                                        <Hyperlink Foreground="LightGoldenrodYellow" 
                                                                   Click="HyperlinkCopyTicker_OnClick">
                                                            Копировать тикер
                                                        </Hyperlink>
                                                        <Run></Run>
                                                        <Hyperlink Foreground="LightGoldenrodYellow" 
                                                                   Click="HyperlinkOpenInAurora_OnClick">
                                                            Открыть в авроре
                                                        </Hyperlink>
                                                    </TextBlock>
                                                    <DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding Ticker}" Value="ERROR">
                                                            <Setter TargetName="ActionsText" Property="Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>  

                            </LayoutAnchorable>

                        </LayoutAnchorablePane>

                    </LayoutPanel>

                    <!--<LayoutPanel Orientation="Vertical">
                        <LayoutAnchorablePane DockWidth="300">
                            <LayoutAnchorable Title="График" ContentId="Chart">
                                  
                            </LayoutAnchorable>
                        </LayoutAnchorablePane>
                    </LayoutPanel>-->

                    <LayoutAnchorablePane Name="ToolsPane" DockMinWidth="250">
                        <LayoutAnchorable Title="Настройки" ContentId="Settings" AutoHideMinWidth="250">
                            <StackPanel Orientation="Vertical" DataContext="{Binding SettingsViewModel}">
                                <Expander Header="Ключи доступа" Name="KeySettings">
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Text="TinkoffInvest OpenAPI Token" FontWeight="Bold" Margin="2" />
                                        <TextBlock Text="Зайдите на страницу настроек Тинькофф Инвестиции, там внизу в блоке Токен для OpenAPI получите Токен для торговли, и вставьте сюда" TextWrapping="Wrap" Margin="2" />
                                        <TextBox Text="{Binding TiApiKey}" Margin="2">
                                            <b:Interaction.Behaviors>
                                                <views:PasswordBehavior />
                                            </b:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock FontWeight="Bold" Text="Telegram Bot Token" Margin="2 6 2 0" />
                                        <TextBlock Text="Создайте бота через @botfather, вставьте сюда его токен" TextWrapping="Wrap" Margin="2" />
                                        <TextBox Text="{Binding TgBotApiKey}" Margin="2" />
                                        <TextBlock Text="Telegram Chat Id" Margin="2 6 2 0" FontWeight="Bold" />
                                        <TextBlock Margin="2" TextWrapping="Wrap"
                                                   Text="Это id чата в телеграмм, куда будет отправлять сообщения ваш бот (по US акциям). Можно пригласить бота в группу\канал, и вставить сюда chatId группы. Чтобы бот писал в лс, вставьте личный chatId (подойдет тот же telegram id что в pantini tools, узнать можно у @pantini_warden_bot или @username_to_id_bot)" />
                                        <TextBox Text="{Binding TgChatId}" Margin="2" />
                                        <TextBlock Text="Telegram Chat Id для акций ММВБ" Margin="2 6 2 0" FontWeight="Bold" />
                                        <TextBlock Margin="2" TextWrapping="Wrap"
                                                   Text="Это id чата в телеграмм для сообщений по русским акциям. Если не хотите их получать, оставьте поле пустым. Можно указать такой же канал как для US акций (выше)" />
                                        <TextBox Text="{Binding TgChatIdRu}" Margin="2" />
                                        <Button Margin="2 10 2 6" cal:Message.Attach="AcceptKeys">Применить</Button>
                                    </StackPanel>
                                </Expander>
                                <Expander Header="USA Data" Visibility="Visible" x:Name="USADataSettingsExpander">
                                    <StackPanel Orientation="Vertical">
                                        <mah:ToggleSwitch IsOn="{Binding USAQuotesEnabled}" FontSize="12.5"
                                                          Content="Включить источник данных США" />
                                        <TextBlock Text="Адрес сервера котировок" Margin="2" />
                                        <TextBox Text="{Binding USAQuotesURL}" Margin="2" />
                                        <TextBlock Text="Логин от сервиса котировок" Margin="2" />
                                        <TextBox Text="{Binding USAQuotesLogin}" Margin="2" />
                                        <TextBlock Text="Пароль от сервиса котировок" Margin="2" />
                                        <TextBox Text="{Binding USAQuotesPassword}" Margin="2">
                                            <b:Interaction.Behaviors>
                                                <views:PasswordBehavior />
                                            </b:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Text="Канал для уведомлений LONG" Margin="2" />
                                        <TextBox Text="{Binding TgArbitrageLongUSAChatId}" Margin="2" />
                                        <TextBlock Text="Канал для уведомлений SHORT" Margin="2" />
                                        <TextBox Text="{Binding TgArbitrageShortUSAChatId}" Margin="2" />
                                        <Button Margin="2 10 2 6" cal:Message.Attach="AcceptOptions">Применить</Button>
                                    </StackPanel>
                                </Expander>
                                 <Expander Header="Настройки уведомлений" IsExpanded="True">
                                    <StackPanel Orientation="Vertical">
                                        <mah:ToggleSwitch IsOn="{Binding IsTelegramEnabled}" FontSize="12.5"
                                                          Content="Слать уведомления в телеграм" />
                                        
                                        <TextBlock Text="При изменении цены за день (%)" Margin="2" />
                                        <TextBox Text="{Binding MinDayPriceChangePercent}" Margin="2" />
                                        
                                        <TextBlock Text="{Binding NumOfMinToCheck, StringFormat={}При изменении цены за {0} минут (%)}" 
                                                   Margin="2" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <mah:NumericUpDown
                                                Margin="2" Minimum="1" Maximum="120"
                                                Value="{Binding NumOfMinToCheck}"></mah:NumericUpDown>
                                            <TextBlock Grid.Column="1" Margin="2" VerticalAlignment="Center">мин.</TextBlock>
                                            <TextBox Grid.Column="2" 
                                                     Text="{Binding MinXMinutesPriceChangePercent}" Margin="2" />    
                                            <TextBlock Grid.Column="3" Margin="2" VerticalAlignment="Center">%</TextBlock>
                                        </Grid>
                                        
                                        <TextBlock Text="Мин. объем при изменении цены &#10; (% от среднего объема за день)" TextWrapping="Wrap" Margin="2" />
                                        <TextBox Text="{Binding MinVolumeDeviationFromDailyAveragePercent}" Margin="2" />

                                        <TextBlock Text="{Binding NumOfMinToCheckVol, StringFormat={}При изменении объёма за {0} минут &#10; (% от среднего объёма за день)}" Margin="2" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <mah:NumericUpDown
                                                Margin="2" Minimum="1" Maximum="120"
                                                Value="{Binding NumOfMinToCheckVol}"></mah:NumericUpDown>
                                            <TextBlock Grid.Column="1" Margin="2" VerticalAlignment="Center">мин.</TextBlock>
                                            <TextBox Grid.Column="2" 
                                                     Text="{Binding MinXMinutesVolPercentChangePercent}" Margin="2" />    
                                            <TextBlock Grid.Column="3" Margin="2" VerticalAlignment="Center">%</TextBlock>
                                        </Grid>

                                        <Button Margin="2 10 2 6" cal:Message.Attach="AcceptOptions">Применить</Button>
                                    </StackPanel>
                                </Expander>
                            </StackPanel>
                        </LayoutAnchorable>
                    </LayoutAnchorablePane>

                </LayoutPanel>

                <!--<LayoutRoot.BottomSide>
                    <LayoutAnchorSide>

                        <LayoutAnchorGroup>
                           
                              
                        </LayoutAnchorGroup>  
                    </LayoutAnchorSide>
                </LayoutRoot.BottomSide>-->
               
            </LayoutRoot>
        </DockingManager>
        <StatusBar Grid.Row="2">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid Visibility="{Binding Status.ShowStatus, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="4">
                <TextBlock Text="{Binding Status.StatusProgressText}"  />
            </StatusBarItem>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="0">
                <TextBlock Text="{Binding Status.StatusInfoText}" />
            </StatusBarItem>
            <Separator Grid.Column="3" />
            <StatusBarItem Grid.Column="2">
                <ProgressBar Value="{Binding Status.StatusPercent}" Width="90" Height="16" />
            </StatusBarItem>
            <Separator Grid.Column="5" />
            <StatusBarItem Grid.Column="6" MinWidth="140">
                <TextBlock Text="{Binding Path=Status.StocksUpdatedIn5Sec, StringFormat={}Обновлено за 5 сек: {0}}" />
            </StatusBarItem>
            <Separator Grid.Column="7" />
            <StatusBarItem Grid.Column="8" MinWidth="140">
                <TextBlock Text="{Binding Path=Status.StocksUpdatedIn1Sec, StringFormat={}Обновлено за 1 сек: {0}}" />
            </StatusBarItem>
            <Separator Grid.Column="9" />
            <StatusBarItem Grid.Column="10" MinWidth="150">
                <TextBlock Text="{Binding Path=Status.TelegramQueryDepth, StringFormat={}Очередь уведомлений: {0}}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</UserControl>
